{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"serverContentInput\"];\nexport let CockpitComponent = /*#__PURE__*/(() => {\n  class CockpitComponent {\n    constructor() {\n      this.serverCreated = new EventEmitter();\n      this.blueprintCreated = new EventEmitter();\n    }\n    onAddServer(nameInput, contentInput) {\n      console.log(this.serverContentInput);\n      this.serverCreated.emit({\n        serverName: nameInput.value,\n        serverContent: contentInput.value\n      });\n    }\n    onAddBlueprint(nameInput, contentInput) {\n      this.blueprintCreated.emit({\n        serverName: nameInput.value,\n        serverContent: contentInput.value\n      });\n    }\n    static #_ = this.ɵfac = function CockpitComponent_Factory(t) {\n      return new (t || CockpitComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CockpitComponent,\n      selectors: [[\"app-cockpit\"]],\n      viewQuery: function CockpitComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.serverContentInput = _t.first);\n        }\n      },\n      outputs: {\n        serverCreated: \"serverCreated\",\n        blueprintCreated: \"blueprintCreated\"\n      },\n      decls: 19,\n      vars: 0,\n      consts: [[1, \"row\"], [1, \"col-xs-12\"], [\"type\", \"\", 1, \"form-control\"], [\"serverNameInput\", \"\"], [\"serverContentInput\", \"\"], [1, \"btn\", \"btn-primary\", 3, \"click\"]],\n      template: function CockpitComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r2 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"p\");\n          i0.ɵɵtext(3, \"Add new Servers or blueprints!\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"label\");\n          i0.ɵɵtext(5, \"Server Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(6, \"input\", 2, 3);\n          i0.ɵɵelementStart(8, \"label\");\n          i0.ɵɵtext(9, \"Server Content\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(10, \"input\", 2, 4);\n          i0.ɵɵelementStart(12, \"label\");\n          i0.ɵɵtext(13, \"Server Content\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"br\");\n          i0.ɵɵelementStart(15, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function CockpitComponent_Template_button_click_15_listener() {\n            i0.ɵɵrestoreView(_r2);\n            const _r0 = i0.ɵɵreference(7);\n            const _r1 = i0.ɵɵreference(11);\n            return i0.ɵɵresetView(ctx.onAddServer(_r0, _r1));\n          });\n          i0.ɵɵtext(16, \"Add Server\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function CockpitComponent_Template_button_click_17_listener() {\n            i0.ɵɵrestoreView(_r2);\n            const _r0 = i0.ɵɵreference(7);\n            const _r1 = i0.ɵɵreference(11);\n            return i0.ɵɵresetView(ctx.onAddBlueprint(_r0, _r1));\n          });\n          i0.ɵɵtext(18, \"Add Server Blueprint\");\n          i0.ɵɵelementEnd()()();\n        }\n      },\n      styles: [\"p[_ngcontent-%COMP%]{color:#00f}\"]\n    });\n  }\n  return CockpitComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}